<div class="read-progress">
  <div
    class="read-progress-bar"
    role="progressbar"
    aria-valuenow="0"
    aria-valuemin="0"
    aria-valuemax="100"
  >
  </div>
</div>

<script>
  const progressBar = document.querySelector(".read-progress-bar");
  const progressContainer = document.querySelector(".read-progress");
  const header = document.querySelector(".header");

  function updateReadProgress() {
    const docElement = document.documentElement;
    const totalHeight = docElement.scrollHeight - docElement.clientHeight;
    const progress = (window.scrollY / totalHeight) * 100;

    if (progressBar instanceof HTMLElement) {
      progressBar.style.width = `${progress}%`;
      progressBar.setAttribute(
        "aria-valuenow",
        Math.round(progress).toString()
      );
    }
  }

  function updateProgressPosition() {
    if (!(progressContainer instanceof HTMLElement)) return;

    // Check if header is hidden
    const isHeaderHidden = header?.classList.contains("header--hidden");
    progressContainer.style.top = isHeaderHidden ? "0" : "4rem";
  }

  // Update on scroll with throttling for performance
  function throttle(func: Function, limit: number) {
    let inThrottle: boolean;
    return function (this: any, ...args: any[]) {
      if (!inThrottle) {
        func.apply(this, args);
        inThrottle = true;
        requestAnimationFrame(() => (inThrottle = false));
      }
    };
  }

  const throttledUpdate = throttle(() => {
    updateReadProgress();
    updateProgressPosition();
  }, 16); // ~60fps

  window.addEventListener("scroll", throttledUpdate, { passive: true });
  window.addEventListener("resize", throttledUpdate, { passive: true });

  // Initial updates
  updateReadProgress();
  updateProgressPosition();
</script>

<style lang="scss">
  .read-progress {
    position: fixed;
    top: 4rem;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--color-selection-bg);

    z-index: 200; // Increased to be above header and its blur
    transition: top 0.3s ease;
  }

  .read-progress-bar {
    height: 100%;
    width: 0;
    background: var(--color-selection-text);
    box-shadow: 0 0 3px var(--color-selection-text);
    transition: width 50ms ease-out;
  }

  @media (prefers-reduced-motion: reduce) {
    .read-progress,
    .read-progress-bar {
      transition: none;
    }
  }
</style>
