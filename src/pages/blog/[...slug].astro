---
import Layout from "@layout/layout.astro";
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout title={post.data.title}>
  <article>
    <header>
      <time datetime={post.data.date.toISOString()}>
        {
          new Intl.DateTimeFormat("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          }).format(post.data.date)
        }
      </time>
      <h1>{post.data.title}</h1>
      <p class="description">{post.data.description}</p>
    </header>
    <div class="content">
      <Content />
    </div>
  </article>
</Layout>

<style lang="scss">
  article {
    max-width: 65ch;
    margin-inline: auto;
  }

  header {
    margin-bottom: 3rem;
    text-align: center;

    time {
      font-size: 0.875rem;
      color: var(--color-fg-tertiary);
    }

    h1 {
      font-size: 2.5rem;
      line-height: 1.2;
      margin-block: 0.5rem 1rem;
      color: var(--color-fg-primary);
    }

    .description {
      font-size: 1.125rem;
      line-height: 1.5;
      color: var(--color-fg-secondary);
      margin: 0;
    }
  }

  .content {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-fg-primary);

    :global(h2) {
      font-size: 1.75rem;
      line-height: 1.3;
      margin-block: 2rem 1rem;
      color: var(--color-fg-primary);
    }

    :global(h3) {
      font-size: 1.5rem;
      line-height: 1.3;
      margin-block: 1.5rem 1rem;
      color: var(--color-fg-primary);
    }

    :global(p) {
      margin-block: 1rem;
    }

    :global(a) {
      color: var(--color-accent-primary);
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }

    :global(ul),
    :global(ol) {
      margin-block: 1rem;
      padding-left: 1.5rem;

      li {
        margin-block: 0.5rem;
      }
    }

    :global(pre) {
      margin-block: 1.5rem;
      padding: 1.25rem;
      border-radius: 8px;
      background-color: #1b1e28;
      border: 1px solid rgba(255, 255, 255, 0.1);
      overflow-x: auto;
      white-space: pre;

      code {
        color: #a7b0c0;
        background: none;
        padding: 0;
        border-radius: 0;
        font-size: 0.95rem;
        line-height: 1.75;
        text-shadow: none;
        font-family: ui-monospace, monospace;
        display: block;
        text-indent: -1em;
        padding-left: 1em;
      }
    }

    :global(code) {
      font-family: ui-monospace, monospace;
      font-size: 0.875em;
    }

    :global(p code) {
      background-color: var(--color-surface-secondary);
      padding: 0.2em 0.4em;
      border-radius: 4px;
      border: 1px solid var(--color-border);
      color: var(--color-accent-primary);
      font-size: 0.875em;
    }

    :global(img) {
      max-width: 100%;
      height: auto;
      border-radius: 8px;
      margin-block: 1.5rem;
    }

    :global(blockquote) {
      margin-block: 1.5rem;
      padding-left: 1rem;
      border-left: 4px solid var(--color-accent-primary);
      color: var(--color-fg-secondary);
      font-style: italic;
    }

    :global(hr) {
      margin-block: 2rem;
      border: none;
      border-top: 1px solid var(--color-border);
    }
  }
</style>
